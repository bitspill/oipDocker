version: '3'

services:
  goflo:
    build: go-flo
    hostname: goflo
    ports:
      - 7316:7316
      - 127.0.0.1:7317:7317
    volumes:
      - goFloHome:/root/.flod/
    networks:
      - flonet


  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:6.7.1
    environment:
      - cluster.name=docker-cluster
      - bootstrap.memory_lock=true
      - "ES_JAVA_OPTS=-Xms4g -Xmx4g"
    ulimits:
      memlock:
        soft: -1
        hard: -1
    volumes:
      - esdata1:/usr/share/elasticsearch/data
    networks:
      - esnet


  elasticsearch2:
    image: docker.elastic.co/elasticsearch/elasticsearch:6.7.1
    environment:
      - cluster.name=docker-cluster
      - bootstrap.memory_lock=true
      - "ES_JAVA_OPTS=-Xms2g -Xmx2g"
      - "discovery.zen.ping.unicast.hosts=elasticsearch"
    ulimits:
      memlock:
        soft: -1
        hard: -1
    volumes:
      - esdata2:/usr/share/elasticsearch/data
    networks:
      - esnet


  kibana:
    image: docker.elastic.co/kibana/kibana:6.7.1
    depends_on:
      - elasticsearch
    ports:
      - 127.0.0.1:5601:5601
    networks:
      - esnet
      - caddynet
    environment:
      SERVER_HOST: 0.0.0.0
      SERVER_BASEPATH: "/kibana"


  oip:
    build: oip
    depends_on:
      - goflo
      - elasticsearch
    ports:
      - 127.0.0.1:1606:1606
    networks:
      - esnet
      - flonet
      - caddynet
    volumes:
      - goFloHome:/flo/

  ipfs:
    image: ipfs/go-ipfs:latest
    environment:
      - IPFS_PROFILE=server
    ports:
      - 4001:4001
      - 127.0.0.1:8080:8080
      - 127.0.0.1:5001:5001
    volumes:
      - ./ipfsStaging:/export
      - ipfsData:/data/ipfs
    networks:
      - caddynet

  webwallet:
    build: webwallet
    networks:
      - caddynet
    environment:
      - NODE_ENV=production
    ports:
      - 7000:7000

  # insightflo:
  #   build: insight-flo
  #   environment:
  #     - NODE_ENV=production
  #   ports:
  #     - 3001:3001

  btcd:
    build: btcd
    ports:
      - 8336:8336
      - 127.0.0.1:8337:8337
    volumes:
      - btcdHome:/root/.btcd/

  # raven:
  #   build: raven
  #   ports:
  #     - 8787:8787
  #     - 127.0.0.1:8786:8786
  #   volumes:
  #     - ravenHome:/rvn/datadir/

  caddy:
    build:
      context: caddy/
      dockerfile: Dockerfile
      args:
        CADDY_VERSION: ${CADDY_VERSION:-0.11.5}
    ports:
      - 80:80
      - 443:443
    networks:
      - caddynet

networks:
  esnet:
  flonet:
  caddynet:


volumes:
  goFloHome:
  btcdHome:
  # ravenHome:
  esdata1:
  esdata2:
  ipfsData:
